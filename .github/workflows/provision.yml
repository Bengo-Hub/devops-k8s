name: Provision Cluster Services

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  provision:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          set -e
          VER=$(curl -L -s https://dl.k8s.io/release/stable.txt)
          curl -LO https://dl.k8s.io/release/${VER}/bin/linux/amd64/kubectl
          sudo install -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client=true

      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Configure kubeconfig
        env:
          KUBE_CONFIG_B64: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ -z "$KUBE_CONFIG_B64" ]; then
            echo "KUBE_CONFIG not provided. Skipping cluster provisioning."
            echo "skip_provision=true" >> $GITHUB_ENV
            exit 0
          fi
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG_B64" | base64 -d > ~/.kube/config
          kubectl cluster-info
          echo "skip_provision=false" >> $GITHUB_ENV

      - name: Ensure scripts executable
        if: env.skip_provision != 'true'
        run: |
          chmod +x scripts/*.sh || true

      - name: Install cert-manager (idempotent)
        if: env.skip_provision != 'true'
        run: |
          ./scripts/install-cert-manager.sh

      - name: Install Argo CD (idempotent)
        if: env.skip_provision != 'true'
        run: |
          ./scripts/install-argocd.sh

      - name: Install Monitoring (idempotent)
        if: env.skip_provision != 'true'
        run: |
          ./scripts/install-monitoring.sh

      - name: Install Databases (idempotent)
        if: env.skip_provision != 'true'
        run: |
          ./scripts/install-databases.sh

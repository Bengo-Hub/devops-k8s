name: Install DevOps Tools

description: 'Reusable composite action to install all required DevOps tools'

inputs:
  install_trivy:
    description: 'Install Trivy security scanner'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Install kubectl
      shell: bash
      run: |
        # Check if kubectl is already installed
        if command -v kubectl &> /dev/null; then
          echo "✓ kubectl already installed"
          kubectl version --client=true
          exit 0
        fi
        
        # Install kubectl
        VER=$(curl -L -s https://dl.k8s.io/release/stable.txt)
        curl -LO https://dl.k8s.io/release/${VER}/bin/linux/amd64/kubectl
        sudo install -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client=true

    - name: Install Helm
      shell: bash
      run: |
        # Check if Helm is already installed (from cache or system)
        if command -v helm &> /dev/null; then
          echo "✓ Helm already installed"
          helm version
          exit 0
        fi
        
        # Try to install Helm
        curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash || {
          echo "⚠️ Network connectivity issue - cannot install Helm"
          echo "This is a transient GitHub Actions infrastructure issue"
          echo "Please retry the workflow in a few minutes"
          exit 1
        }
        helm version

    - name: Install yq
      shell: bash
      run: |
        # Check if yq is already installed
        if command -v yq &> /dev/null; then
          echo "✓ yq already installed"
          yq --version
          exit 0
        fi
        
        # Install yq
        sudo curl -L "https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64" -o /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq
        yq --version

    - name: Install Trivy (optional)
      shell: bash
      if: ${{ inputs.install_trivy == 'true' }}
      run: |
        # Check if Trivy is already installed
        if command -v trivy &> /dev/null; then
          echo "✓ Trivy already installed"
          trivy --version
          exit 0
        fi
        
        # Install Trivy
        sudo apt-get update -y
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y
        trivy --version

    - name: Install ArgoCD CLI
      shell: bash
      run: |
        # Check if ArgoCD CLI is already installed
        if command -v argocd &> /dev/null; then
          echo "✓ ArgoCD CLI already installed"
          argocd version --client || true
          exit 0
        fi
        
        # Install ArgoCD CLI
        ARGOCD_VERSION="v2.13.0"
        curl -sSL -o /tmp/argocd https://github.com/argoproj/argo-cd/releases/download/${ARGOCD_VERSION}/argocd-linux-amd64
        sudo install -m 0755 /tmp/argocd /usr/local/bin/argocd
        argocd version --client || true
        rm -f /tmp/argocd

    - name: Install system dependencies
      shell: bash
      run: |
        # Check which dependencies are missing
        MISSING_DEPS=()
        
        command -v jq &> /dev/null || MISSING_DEPS+=("jq")
        command -v curl &> /dev/null || MISSING_DEPS+=("curl")
        command -v git &> /dev/null || MISSING_DEPS+=("git")
        command -v openssl &> /dev/null || MISSING_DEPS+=("openssl")
        
        if [ ${#MISSING_DEPS[@]} -eq 0 ]; then
          echo "✓ All system dependencies already installed"
          exit 0
        fi
        
        # Install missing dependencies
        echo "Installing missing dependencies: ${MISSING_DEPS[*]}"
        sudo apt-get update -y
        sudo apt-get install -y "${MISSING_DEPS[@]}"

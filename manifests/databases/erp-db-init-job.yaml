apiVersion: batch/v1
kind: Job
metadata:
  name: erp-db-init
  namespace: erp
  labels:
    app: erp-db-init
spec:
  ttlSecondsAfterFinished: 3600  # Clean up after 1 hour
  template:
    metadata:
      labels:
        app: erp-db-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: db-init
        image: docker.io/codevertex/erp-api:latest  # Replace with actual image
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Waiting for PostgreSQL to be ready..."
          until python manage.py dbshell --command="SELECT 1" > /dev/null 2>&1; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 2
          done
          echo "PostgreSQL is up - running migrations"
          
          # Run migrations
          python manage.py migrate --noinput
          
          # Create superuser if not exists
          python manage.py shell <<EOF
          from django.contrib.auth import get_user_model
          User = get_user_model()
          if not User.objects.filter(username='admin').exists():
              User.objects.create_superuser('admin', 'admin@codevertex.com', 'CHANGE_ME_ADMIN_PASSWORD')
              print("Superuser created")
          else:
              print("Superuser already exists")
          EOF
          
          # Collect static files
          python manage.py collectstatic --noinput || true
          
          echo "Database initialization complete"
        envFrom:
        - secretRef:
            name: erp-api-env
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

